#!/bin/bash

# detect various flavors of *ix

platform=unknown
platform_version=unknown
processor=unknown

#change the location where we look for config files. Used for
#testing. Change this by passing the the -c option to the script.  
CONF_DIR=/etc/


#TODO: test this
function get_aix_version {
    platform="aix"
    platform_version=$(oslevel) 
    processor=$(grep "^Processor Type:" file.txt | cut -d ' ' -f 3) 
}

function get_osx_version {
    platform="osx"
    platform_version=$(sw_vers | awk '/^ProductVersion:/ { print $2 }')
    processor=$(printf `uname -m`)
}

#inspired from the chef install.sh script
function get_linux_distro {
    # /etc/os-release is meant to be the new Linux standard...
    if [ -f "${CONF_DIR}/os-release" ]; then
        platform=$(grep ^NAME ${CONF_DIR}/os-release | cut -d "=" -f 2 | tr '[A-Z]' '[a-z]' | tr -d '\"') 
        platform_version=$(grep ^VERSION_ID ${CONF_DIR}/os-release | cut -d "=" -f 2 | tr '[A-Z]' '[a-z]' | tr -d '\"')
    elif [ -f "${CONF_DIR}/redhat-release" ]; then #redhat/centos
        platform=$(sed 's/^\(.\+\) release.*/\1/' ${CONF_DIR}/redhat-release | tr '[A-Z]' '[a-z]' | tr ' ' '_' )
        platform_version=$(sed 's/^.\+ release \([.0-9]\+\).*/\1/' ${CONF_DIR}/redhat-release)
    elif [ -f "${CONF_DIR}/debian_version" ]; then
        platform="debian"
        platform_version=$(cat ${CONF_DIR}/debian_version)
    fi 

    processor=$(printf `uname -m`)
}

#TODO: test this
function get_solaris_version {
    platform="solaris2"
    platform_version=$(/usr/bin/uname -r)
    processor=$(/usr/bin/uname -p)
}

#start detection 

function usage {
    printf >&2 "${0} [-a] [-n] [-p] [-v] [-c directory]\n"
    printf >&2 "\t-a\t\tshow all fields\n"
    printf >&2 "\t-n\t\tshow operating system\n"
    printf >&2 "\t-p\t\tshow processor type\n"
    printf >&2 "\t-v\t\tshow version\n"
    exit 1
}



while getopts "ac:hnvp" opt; do
    case ${opt} in
        c)
            CONF_DIR=${OPTARG}
            ;;
        h)
            usage
            ;;
        n)
            PRINT_NAME=TRUE 
            ;;
        v) 
            PRINT_VERSION=TRUE
            ;;
        p)
            PRINT_PROCESSOR=TRUE
            ;;
        a)
            PRINT_ALL=TRUE
            ;;
        \?)
            usage
            ;; 
    esac
done


os_name=$(printf `uname -s`)

case ${os_name} in 
    AIX)
        get_aix_version
        ;;
    Linux) 
        get_linux_distro
        ;;
    Darwin)
        get_osx_version 
        ;;
    SunOS)
        get_solaris_version 
        ;;
    *)
        echo "Error: Unsupported operating system"
        exit 1
        ;;
esac 

if [ "${PRINT_ALL}" ==  "TRUE" ] ; then
    echo "NAME=${platform}" 
    echo "VERSION_ID=${platform_version}"
    echo "PROCESSOR=${processor}"
else  
    [[ ${PRINT_NAME} = "TRUE" ]] && printf "${platform}\n"
    [[ ${PRINT_VERSION} = "TRUE" ]] && printf "${platform_version}\n"
    [[ ${PRINT_PROCESSOR} = "TRUE" ]] && printf "${processor}\n"
fi
